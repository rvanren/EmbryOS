.SUFFIXES:

YELLOW      = \033[1;33m
END         = \033[0m

LDFLAGS     = -nostdlib
DEBUG_FLAGS = --source --all-headers --demangle --line-numbers --wide

# Architecture-specific variables (set by Makefile.32/64)
#   XLEN, CC, QEMU, CFLAGS_ARCH, ABI, etc.

CFLAGS      = $(CFLAGS_ARCH) -Wl,--gc-sections -ffunction-sections -fdata-sections \
              -fdiagnostics-show-option -fno-builtin

all:
	@printf "$(YELLOW)-------- Compile Hello, World! (RV$(XLEN)) --------$(END)\n"
	$(CC) $(CFLAGS) -Ishared -I. start.s hello.c kprintf.c io.c -Thello.lds $(LDFLAGS) -o hello.elf
	$(OBJDUMP) $(DEBUG_FLAGS) hello.elf > hello.lst
	$(OBJCOPY) -O binary hello.elf hello.bin

qemu: all
	@printf "$(YELLOW)-------- Run Hello, World! on QEMU (RV$(XLEN)) --------$(END)\n"
	$(QEMU) -nographic -machine virt -smp 2 -bios default -kernel hello.bin
	@printf "$(END)\033[?25h\n"

clean:
	@printf "$(YELLOW)-------- clean (RV$(XLEN)) --------$(END)\n"
	rm -f hello.bin hello.lst hello.elf
